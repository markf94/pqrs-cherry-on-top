- name: Copy i3 config file
  copy:
    src: i3-config
    dest: ~/.pqrs/i3-config
  when: role_version is version("0.1.19", "lt")
- name: Uninstall vanilla i3 to enable i3-gaps
  become: yes
  package:
    name: i3
    state: absent
  when: role_version is version("0.1.19", "lt")
- name: Install i3-gaps for gaps between windows
  become: yes
  package:
    name: i3-gaps
    state: present
  when: role_version is version("0.1.19", "lt")
- name: Add community Copr for i3blocks-contrib
  become: yes
  command:
    cmd: dnf copr enable -y skidnik/i3blocks
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:skidnik:i3blocks.repo
  when: role_version is version("0.1.19", "lt")
- name: Install i3blocks for info blocks in status bars
  become: yes
  package:
    name: "{{ item }}"
    state: present
  loop:
    - i3blocks
    - i3blocks-contrib
  when: role_version is version("0.1.19", "lt")
- name: Install dependencies for my personal i3blocks
  become: yes
  package:
    name: "{{ item }}"
    state: present
  loop:
    - kbdd
    - acpi
    - sysstat
  when: role_version is version("0.1.19", "lt")
- name: Clone i3blocks-weather repo
  git:
    repo: https://github.com/hirotasoshu/i3blocks-weather
    dest: ~/Installed/i3blocks-weather
    version: master
    depth: 1
    force: yes
  when: role_version is version("0.1.21", "lt")
- name: Create i3blocks.d directory
  file:
    path: "~/.pqrs/i3blocks.d"
    state: directory
    mode: '0755'
- name: Install i3blocks-weather
  copy:
    src: "~/Installed/i3blocks-weather/{{ item }}"
    dest: "~/.pqrs/i3blocks.d/{{ item }}"
    mode: +x
  loop:
    - weather.py
    - codes.py
  when: role_version is version("0.1.22", "lt")
- name: Clone weather-icons repo
  git:
    repo: https://github.com/erikflowers/weather-icons
    dest: ~/Installed/weather-icons
    version: master
    depth: 1
    force: yes
  when: role_version is version("0.1.21", "lt")
- name: Install weather-icons
  become: yes
  copy:
    src: "~/Installed/weather-icons/font/"
    dest: "/usr/share/fonts/weather-icons"
  when: role_version is version("0.1.21", "lt")
- name: Add community Copr for i3lock-color
  become: yes
  command:
    cmd: dnf copr enable -y tokariew/i3lock-color
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:tokariew:i3lock-color.repo
  when: role_version is version("0.1.19", "lt")
- name: Uninstall i3lock before installing i3lock-color
  become: yes
  package:
    name: i3lock
    state: absent
  when: role_version is version("0.1.19", "lt")
- name: Install betterlockscreen dependencies
  become: yes
  package:
    name: "{{ item }}"
    state: present
  loop:
    - xset
    - i3lock-color
    - ImageMagick
    - xdpyinfo
    - xrandr
    - xrdb
    - autoconf
    - automake
    - cairo-devel
    - fontconfig
    - gcc
    - libev-devel
    - libjpeg-turbo-devel
    - libXinerama
    - libxkbcommon-devel
    - libxkbcommon-x11-devel
    - libXrandr
    - pam-devel
    - pkgconf
    - xcb-util-image-devel
    - xcb-util-xrm-devel
  when: role_version is version("0.1.19", "lt")
- name: Install fontawesome for status bar icons
  become: yes
  package:
    name: "{{ item }}"
    state: present
  loop:
    - fontawesome-fonts
    - fontawesome5-fonts-all
  when: role_version is version("0.1.19", "lt")
- name: Download betterlockscreen
  become: yes
  command:
    chdir: "{{ home }}/Installed/"
    cmd: "{{ item }}"
    creates: "{{ home }}/Installed/betterlockscreen-main"
  loop:
    - wget https://github.com/pavanjadhaw/betterlockscreen/archive/refs/heads/main.zip
    - unzip main.zip
    - rm main.zip
  when: role_version is version("0.1.19", "lt")
- name: Install betterlockscreen
  become: yes
  command:
    chdir: "{{ home }}/Installed/betterlockscreen-main"
    cmd: "{{ item }}"
  loop:
    - chmod u+x betterlockscreen
    - cp betterlockscreen /usr/local/bin/
    - cp system/betterlockscreen@.service /usr/lib/systemd/system/
    - systemctl enable betterlockscreen@$USER
  when: role_version is version("0.1.19", "lt")
- name: Create wallpapers directory
  file:
    path: ~/Pictures/wallpapers
    state: directory
  when: role_version is version("0.1.20", "lt")
- name: Copy wallpapers
  copy:
    src: "{{ item }}"
    dest: "~/Pictures/wallpapers/{{ item }}"
  loop:
    - nordic-wall.jpg
    - space_surfer.jpg
  when: role_version is version("0.1.20", "lt")
- name: Configure betterlockscreen
  command:
    cmd: betterlockscreen -u ~/Pictures/wallpapers/nordic-wall.jpg
  when: role_version is version("0.1.20", "lt")
- name: Clone nerd-fonts repo
  git:
    repo: https://github.com/ryanoasis/nerd-fonts
    dest: ~/Installed/nerd-fonts
    version: master
    depth: 1
    force: yes
  when: role_version is version("0.1.19", "lt")
- name: Install nerd-fonts
  become: yes
  command:
    chdir: "{{ home }}/Installed/nerd-fonts"
    cmd: ./install.sh
  when: role_version is version("0.1.19", "lt")
- name: Copy i3blocks config files
  copy:
    src: "{{ item }}"
    dest: "~/.pqrs/{{ item }}"
  loop:
    - i3blocks-top.conf
    - i3blocks-bottom.conf
    - i3blocks.d/
  when: role_version is version("0.1.23", "lt")
- name: Install lxappearance to scale and beautify i3
  become: yes
  package:
    name: lxappearance
    state: present
  when: role_version is version("0.1.19", "lt")
- name: Copy X config files
  copy:
    src: "{{ item }}"
    dest: "~/{{ item }}"
  loop:
    - .xinitrc
    - .Xresources
  when: role_version is version("0.1.19", "lt")
- name: Create .icons directory
  file:
    path: ~/.icons
    state: directory
  when: role_version is version("0.1.20", "lt")
- name: Copy icon packages
  copy:
    src: "{{ item }}"
    dest: "~/.icons/{{ item }}"
  loop:
    - candy-icons.zip
    - sovtc_icons.zip
  when: role_version is version("0.1.19", "lt")
- name: Installing candy-icons
  command:
    chdir: ~/.icons
    cmd: "{{ item }}"
    creates: ~/.icons/candy-icons
  loop:
    - unzip candy-icons.zip
    - rm candy-icons.zip
  when: role_version is version("0.1.19", "lt")
- name: Installing sovtc-icons
  command:
    chdir: ~/.icons
    cmd: "{{ item }}"
    creates: ~/.icons/sovtc_icons
  loop:
    - unzip sovtc_icons.zip
    - rm sovtc_icons.zip
  when: role_version is version("0.1.19", "lt")
- name: Create .themes directory
  file:
    path: ~/.themes
    state: directory
  when: role_version is version("0.1.20", "lt")
- name: Copy themes packages
  copy:
    src: "{{ item }}"
    dest: "~/.themes/{{ item }}"
  loop:
    - cyberhack.zip
    - Nordic-master.zip
    - Ultimate-Plata-Dark.zip
  when: role_version is version("0.1.19", "lt")
- name: Installing cyberhack theme package
  command:
    chdir: ~/.themes
    cmd: "{{ item }}"
    creates: ~/.themes/cyberhack
  loop:
    - unzip cyberhack.zip
    - rm cyberhack.zip
  when: role_version is version("0.1.19", "lt")
- name: Installing Ultimate-Plata-Dark theme package
  command:
    cmd: "{{ item }}"
    chdir: ~/.themes
    creates: ~/.themes/Ultimate-Plata-Dark
  loop:
    - unzip Ultimate-Plata-Dark.zip
    - rm Ultimate-Plata-Dark.zip
  when: role_version is version("0.1.19", "lt")
- name: Installing Nordic-master theme package
  command:
    cmd: "{{ item }}"
    chdir: ~/.themes
    creates: ~/.themes/Nordic-master
  loop:
    - unzip Nordic-master.zip
    - rm Nordic-master.zip
  when: role_version is version("0.1.19", "lt")
- name: Install dunst and compton
  become: yes
  package:
    name: "{{ item }}"
    state: present
  loop:
    - dunst
    - compton
  when: role_version is version("0.1.19", "lt")
- name: Copy dunstrc file
  copy:
    src: dunstrc
    dest: ~/.pqrs/dunstrc
  when: role_version is version("0.1.19", "lt")
- name: Copy compton.conf file
  copy:
    src: compton.conf
    dest: ~/.pqrs/compton.conf
  when: role_version is version("0.1.19", "lt")
